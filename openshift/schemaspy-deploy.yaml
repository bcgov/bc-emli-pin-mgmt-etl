apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: schemaspy
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # Adjust the storage size as needed

---
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-schemaspy-pvc
spec:
  template:
    spec:
      containers:
      - name: cleanup-container
        image: 'alpine:latest'  # You can use a simple Alpine Linux image for cleanup
        command: ["/bin/sh"]
        args: ["-c", "rm -rf /output/*"]
        volumeMounts:
        - name: output
          mountPath: /output
      restartPolicy: OnFailure
      volumes:
      - name: output
        persistentVolumeClaim:
          claimName: schemaspy
  backoffLimit: 0

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: schemaspy-cronjob
spec:
  schedule: "*/10 * * * *"
  startingDeadlineSeconds: 3600
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
          - name: output
            persistentVolumeClaim:
              claimName: schemaspy
          containers:
          - name: schemaspy-container
            image: 'schemaspy/schemaspy:latest'  # Adjust the image and tag as needed
            imagePullPolicy: Always
            args: ["-t", "$(DB_TYPE)", "-db", "$(DB_NAME)", "-host", "$(DB_HOST)", "-u", "$(DB_USER)", "-p", "$(DB_PASSWORD)"]
            resources:
              limits:
                memory: "512Mi"
                cpu: "500m"
              requests:
                memory: "200Mi"
                cpu: "250m"
            volumeMounts:
            - name: output
              mountPath: /output  # Adjust the mount path as needed
          restartPolicy: OnFailure
